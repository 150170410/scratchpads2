<?php
/**
 * @file
 * Code for the EcoInt feature.
 */

include_once 'ecoint.features.inc';

function ecoint_apachesolr_index_document_build(ApacheSolrDocument $document, $entity, $entity_type, $env_id) {
  if($entity_type == 'node' && $entity->type == 'ecological_interactions'){
    /*Both taxonomic name fields are sent as the same field*/
    $extra_taxonomic_name_field = field_collection_item_load($entity->field_int_collection['und'][0]['value']);
    $extra_taxonomic_name_field = $extra_taxonomic_name_field->field_taxonomic_name['und'][0]['taxonomy_term'];
    $document->addField('im_field_taxonomic_name', $extra_taxonomic_name_field->tid);
    $terms_to_add = taxonomy_get_parents($extra_taxonomic_name_field->tid);
    foreach ($terms_to_add as $term_to_add) {
      $document->addField('im_field_taxonomic_name', $term_to_add->tid);
    }
  }
}

/**
 * Implementation of hook_theme().
 */
function ecoint_theme(){
  return array(
      'ecoint_search' => array(
          'variables' => array(
              'results' => NULL,
              'module' => NULL
          ),
          'file' => 'ecoint.theme.inc'
      ),
      'ecoint_search_empty' => array(
          'variables' => array(),
          'file' => 'ecoint.theme.inc'
      )
  );
}


/**
 * Implementation of hook_scratchpads_solr_info().
 */
function ecoint_scratchpads_solr_info(){
  return array(
      'interactions' => array(
          'theme' => 'ecoint_search',
          'empty' => 'ecoint_search_empty'
      )
  );
}

function ecoint_block_info() {
  $blocks = array();
  $blocks['species-interactions'] = array(
    'info' => t('Species Interactions'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $blocks;
}

function ecoint_block_view($delta = '') {
  $block = array();
  
  switch($delta) {
    case 'species-interactions':
      $block['subject'] = 'Species Interactions';
      $block['content'] = ecoint_species_block_content();
  }
  return $block;
}

function ecoint_species_block_content() {
  $solr_page = apachesolr_search_page_load('interactions');
  $conditions = array(
      'fq' => array(
          0 => array( 
            0 => 'bundle:ecological_interactions',
            1 => 'entity_type:node',
          ),
      ),
      'f' => array(
      ),
  );
  $results = apachesolr_search_search_results(NULL, $conditions, $solr_page);
  include('ecoint.theme.inc');
  return theme_ecoint_search(array('results' => $results));
}

function ecoint_apachesolr_query_alter(DrupalSolrQueryInterface $query) {
  if (substr(current_path(), 0, 14) == 'taxonomy/term/') {
    $query->addFilter("im_field_taxonomic_name", arg(2));
  }
}

function ecoint_context_load_alter(&$context){
  if($context->name == 'species_overview'){
    $context->reactions['block']['blocks']['species-interactions'] = array(
      'module' => 'ecoint',
      'delta' => 'species-interactions',
      'region' => 'content',
      'weight' => 10,
    );
  }
}
