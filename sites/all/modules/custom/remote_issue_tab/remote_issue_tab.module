<?php

/**
 * Implementation of hook_block_info()
 */
function remote_issue_tab_block_info(){
  // Note, we cache by user, as the user details are embeded in the URLs that
  // are added to the block.
  return array(
    array(
      'info' => t('Remote issue block'),
      'cache' => DRUPAL_CACHE_PER_USER
    )
  );
}

/**
 * Implementation of hook_block_configure()
 */
function remote_issue_tab_block_configure($delta = ''){
  $feeds = array(
    t('-- Not Set --')
  );
  $results = db_select('aggregator_feed', 'a')->fields('a', array(
    'title',
    'fid',
    'url'
  ))->execute();
  foreach($results as $row){
    $feeds[$row->fid] = check_plain($row->title . ' (' . $row->url . ')');
  }
  return array(
    'remote_issue_tab_feed' => array(
      '#title' => t('Please select the feed to be used by the Remote Issue Block'),
      '#type' => 'select',
      '#options' => $feeds,
      '#default_value' => variable_get('remote_issue_tab_feed', 0),
      '#description' => t('Select the RSS Feed (A new RSS feed can be added using the <a href="!agg_url">Aggregator interface</a>, after which you will be redirected here.)', array(
        '!agg_url' => url('admin/config/services/aggregator/add/feed', array(
          'query' => array(
            'destination' => 'admin/structure/block/manage/remote_issue_tab/0/configure'
          )
        ))
      ))
    ),
    'remote_issue_tab_html_link' => array(
      '#title' => t('Issues index page'),
      '#description' => t('Enter the URL of the page where users can create or search for issues'),
      '#type' => 'textfield',
      '#default_value' => variable_get('remote_issue_tab_html_link', '')
    ),
    'remote_issue_tab_footer' => array(
      '#title' => t('Footer'),
      '#type' => 'textarea',
      '#default_value' => variable_get('remote_issue_tab_footer', ''),
      '#description' => t('Enter text to be displayed below the Recent Issues.')
    )
  );
}

/**
 * Implementation of hook_block_save()
 */
function remote_issue_tab_block_save($delta = '', $edit = array()){
  variable_set('remote_issue_tab_feed', $edit['remote_issue_tab_feed']);
  variable_set('remote_issue_tab_html_link', $edit['remote_issue_tab_html_link']);
  variable_set('remote_issue_tab_footer', $edit['remote_issue_tab_footer']);
}

/**
 * Implementation of hook_block_view()
 */
function remote_issue_tab_block_view($delta = ''){
  global $user;

  $content = array(
    'block' => array(
      '#theme' => 'remote_issue_tab_block',
      '#feed' => variable_get('remote_issue_tab_feed', 0),
      '#html_link' => variable_get('remote_issue_tab_html_link', ''),
      '#footer' => variable_get('remote_issue_tab_footer', '')
    )
  );
  $content = drupal_render($content);

  return array(
    'subject' => t('Issues...'),
    'content' => $content
  );
}

/**
 * hook_theme
 */
function remote_issue_tab_theme($existing, $type, $theme, $path){
  return array(
    'remote_issue_tab_block' => array(
      'variables' => array(
        'feed' => 0,
        'html_link' => FALSE,
        'footer' => ''
      ),
      'file' => 'remote_issue_tab.theme.inc'
    ),
    'remote_issue_tab_feed_items' => array(
      'variables' => array(
        'items' => NULL,
        'feed' => 0
      ),
      'file' => 'remote_issue_tab.theme.inc'
    ),
    'remote_issue_tab_feed_item' => array(
      'variables' => array(
        'item' => NULL,
        'item_count' => NULL
      ),
      'file' => 'remote_issue_tab.theme.inc'
    )
  );
}

/**
 * Implementation of hook_aggregator_parse()
 * Allow the aggregator to consume json feeds (specifically github)
 */
function remote_issue_tab_aggregator_parse($feed) {
  // Might be a good idea to check $feed->http_headers['content-type'] = application/json
  // or x-github-media-type = v3 json and fall back to the default parser if not present
xdebug_break();
  $issues = json_decode($feed->source_string);

  $feed->items = array_map("_remote_issue_tab_map_gh_issue",
    array_filter($issues, function($issue) {
      return !property_exists($issue, 'pull_request');
    })
  );

  return TRUE;
}

/**
 * Map a github issue to format that hook_aggregator_parse should return
 */
function _remote_issue_tab_map_gh_issue($issue) {
  return array(
    "title"=>$issue->title,
    "description"=>$issue->body,
    "timestamp"=>strtotime($issue->created_at),
    "author"=>$issue->user->login,
    "guid"=>$issue->id,
    "link"=>$issue->html_url
  );
}
